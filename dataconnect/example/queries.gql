mutation CreateOffice @auth(level: USER) {
  office_insert(data: {
    name: "My Office",
    description: "A great place to work",
    ownerId_expr: "auth.uid",
    createdAt_expr: "request.time"
  })
}

query GetMyOffices @auth(level: USER) {
  offices(where: {ownerId: {eq_expr: "auth.uid"}}) {
    id
    name
    description
    createdAt
  }
}

mutation UpdateAvatarPosition($avatarId: UUID!, $xPosition: Int!, $yPosition: Int!) @auth(level: USER) {
  avatar_update(
    id: $avatarId,
    data: {
      xPosition: $xPosition,
      yPosition: $yPosition,
      lastMovementAt_expr: "request.time"
    }
  ) {
    id
  }
}

query GetRoomDetails($roomId: UUID!) @auth(level: USER) {
  room(id: $roomId) {
    id
    name
    description
    type
    office {
      id
      name
    }
    sharedObjects_on_room {
      id
      type
      name
      xPosition
      yPosition
    }
  }
}